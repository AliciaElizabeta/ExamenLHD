<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcom_1_1thealgorithms_1_1datastructures_1_1caches_1_1_l_r_u_cache" xml:lang="en-US">
<title>com.thealgorithms.datastructures.caches.LRUCache&lt; K, V &gt; Class Template Reference</title>
<indexterm><primary>com.thealgorithms.datastructures.caches.LRUCache&lt; K, V &gt;</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <emphasis role="strong">Entry</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1datastructures_1_1caches_1_1_l_r_u_cache_1ab10b29e200163c048b577ab23a4c16d0"/><emphasis role="strong">LRUCache</emphasis> (int cap)</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1datastructures_1_1caches_1_1_l_r_u_cache_1ad6df49519772a637b2c065e7eea446b8"/>V <emphasis role="strong">get</emphasis> (K key)</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1datastructures_1_1caches_1_1_l_r_u_cache_1a524f2731b631a60c0adc20f666ad4132"/>void <emphasis role="strong">put</emphasis> (K key, V value)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1datastructures_1_1caches_1_1_l_r_u_cache_1a08a43aac0b1200b0704c1c5d73c66169"/>static void <emphasis role="strong">main</emphasis> (String[] args)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Least recently used (LRU) </para>

<para>Discards the least recently used items first. This algorithm requires keeping track of what was used when, which is expensive if one wants to make sure the algorithm always discards the least recently used item. <link xlink:href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)">https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)</link></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>&lt;K&gt;</entry><entry>
<para>key type </para>
</entry>
                            </row>
                            <row>
<entry>&lt;V&gt;</entry><entry>
<para>value type </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
The documentation for this class was generated from the following file:</para>
src/main/java/com/thealgorithms/datastructures/caches/LRUCache.java</section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci" xml:lang="en-US">
<title>com.thealgorithms.dynamicprogramming.Fibonacci Class Reference</title>
<indexterm><primary>com.thealgorithms.dynamicprogramming.Fibonacci</primary></indexterm>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1a9f2eed28605e5d93be1567f67c41c312"/>static void <emphasis role="strong">main</emphasis> (String[] args)</para>
</listitem>
            <listitem><para>static int <link linkend="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1a45f208149b9bf51e1754580b5155071d">fibMemo</link> (int n)</para>
</listitem>
            <listitem><para>static int <link linkend="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1ae424a1e9468b90870acdc006d61ffb65">fibBotUp</link> (int n)</para>
</listitem>
            <listitem><para>static int <link linkend="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1a9211b4c38f0cf32917bfac658c420d87">fibOptimized</link> (int n)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><formalpara><title>Author</title>

<para>Varun Upadhyay (<link xlink:href="https://github.com/varunu28">https://github.com/varunu28</link>) </para>
</formalpara>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1ae424a1e9468b90870acdc006d61ffb65"/><section>
    <title>fibBotUp()</title>
<indexterm><primary>fibBotUp</primary><secondary>com.thealgorithms.dynamicprogramming.Fibonacci</secondary></indexterm>
<indexterm><primary>com.thealgorithms.dynamicprogramming.Fibonacci</primary><secondary>fibBotUp</secondary></indexterm>
<para><computeroutput>static int com.thealgorithms.dynamicprogramming.Fibonacci.fibBotUp (int n)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>This method finds the nth fibonacci number using bottom up</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para>The input n for which we have to determine the fibonacci number Outputs the nth fibonacci number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1a45f208149b9bf51e1754580b5155071d"/><section>
    <title>fibMemo()</title>
<indexterm><primary>fibMemo</primary><secondary>com.thealgorithms.dynamicprogramming.Fibonacci</secondary></indexterm>
<indexterm><primary>com.thealgorithms.dynamicprogramming.Fibonacci</primary><secondary>fibMemo</secondary></indexterm>
<para><computeroutput>static int com.thealgorithms.dynamicprogramming.Fibonacci.fibMemo (int n)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>This method finds the nth fibonacci number using memoization technique</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para>The input n for which we have to determine the fibonacci number Outputs the nth fibonacci number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci_1a9211b4c38f0cf32917bfac658c420d87"/><section>
    <title>fibOptimized()</title>
<indexterm><primary>fibOptimized</primary><secondary>com.thealgorithms.dynamicprogramming.Fibonacci</secondary></indexterm>
<indexterm><primary>com.thealgorithms.dynamicprogramming.Fibonacci</primary><secondary>fibOptimized</secondary></indexterm>
<para><computeroutput>static int com.thealgorithms.dynamicprogramming.Fibonacci.fibOptimized (int n)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>This method finds the nth fibonacci number using bottom up</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para>The input n for which we have to determine the fibonacci number Outputs the nth fibonacci number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                This is optimized version of <link linkend="_classcom_1_1thealgorithms_1_1dynamicprogramming_1_1_fibonacci">Fibonacci</link> Program. Without using Hashmap and recursion. It saves both memory and time. Space Complexity will be O(1) Time Complexity will be O(n) </para>

<para>Whereas , the above functions will take O(n) Space. <formalpara><title>Author</title>

<para>Shoaib Rayeen (<link xlink:href="https://github.com/shoaibrayeen">https://github.com/shoaibrayeen</link>) </para>
</formalpara>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/main/java/com/thealgorithms/dynamicprogramming/Fibonacci.java</section>
</section>

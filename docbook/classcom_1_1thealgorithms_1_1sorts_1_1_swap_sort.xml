<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcom_1_1thealgorithms_1_1sorts_1_1_swap_sort" xml:lang="en-US">
<title>com.thealgorithms.sorts.SwapSort Class Reference</title>
<indexterm><primary>com.thealgorithms.sorts.SwapSort</primary></indexterm>
<para>Inheritance diagram for com.thealgorithms.sorts.SwapSort:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcom_1_1thealgorithms_1_1sorts_1_1_swap_sort.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1sorts_1_1_swap_sort_1a2cd5f1727a77e664ff8682ca0b56c609"/>static void <emphasis role="strong">main</emphasis> (String[] args)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The idea of Swap-Sort is to count the number m of smaller values (that are in A) from each element of an array A(1...n) and then swap the element with the element in A(m+1). This ensures that the exchanged element is already in the correct, i.e. final, position. The disadvantage of this algorithm is that each element may only occur once, otherwise there is no termination. </para>
<para>
The documentation for this class was generated from the following file:</para>
src/main/java/com/thealgorithms/sorts/SwapSort.java</section>
</section>

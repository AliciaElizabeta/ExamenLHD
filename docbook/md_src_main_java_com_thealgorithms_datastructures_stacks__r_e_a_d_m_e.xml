<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md_src_main_java_com_thealgorithms_datastructures_stacks__r_e_a_d_m_e" xml:lang="en-US">

<para>Stack is an ADT (abstract data type) that acts like a list of objects but there is a difference.</para>

<para>Stack works on the principle of <emphasis>LIFO</emphasis> (Last In First Out), it means that the last item added to the stack will be the first item to be removed.</para>

<para>Stack is based on two methods (functions)-</para>
<section xml:id="_md_src_main_java_com_thealgorithms_datastructures_stacks__r_e_a_d_m_e_1autotoc_md25">
<title>push(element)</title>

<para>It adds &quot;element&quot; to the top of the stack.</para>

<para>For example: If we have <computeroutput>1, 3, 5</computeroutput> in stack, and we call push(9),</para>

<para><computeroutput>9</computeroutput> will be added to last index of stack -&gt; <computeroutput>1, 3, 5 , 9</computeroutput>.</para>
</section>
<section xml:id="_md_src_main_java_com_thealgorithms_datastructures_stacks__r_e_a_d_m_e_1autotoc_md26">
<title>peek() or top()</title>

<para>It returns element at the top of the stack.</para>

<para>For example: If we have <computeroutput>1, 3, 5</computeroutput> in stack, and we call peek(),</para>

<para><computeroutput>5</computeroutput> will be returned (without removing it from the stack).</para>
</section>
<section xml:id="_md_src_main_java_com_thealgorithms_datastructures_stacks__r_e_a_d_m_e_1autotoc_md27">
<title>pop()</title>

<para>It removes the last element (i.e. top of stack) from stack.</para>

<para>For example: If we have <computeroutput>1, 3, 5 , 9</computeroutput> in stack, and we call pop(),</para>

<para>the function will return <computeroutput>9</computeroutput> and the stack will change to <computeroutput>1, 3, 5</computeroutput>. </para>
</section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcom_1_1thealgorithms_1_1maths_1_1_combinations" xml:lang="en-US">
<title>com.thealgorithms.maths.Combinations Class Reference</title>
<indexterm><primary>com.thealgorithms.maths.Combinations</primary></indexterm>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1a2c7e0f8e0ba7d9c28c6ca4247b7fc6b0"/>static void <emphasis role="strong">main</emphasis> (String[] args)</para>
</listitem>
            <listitem><para>static long <link linkend="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1a84652528f03384d6ae54f99c55435187">factorial</link> (int n)</para>
</listitem>
            <listitem><para>static long <link linkend="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1abf95585bc82ee2547c1ba3df3aca3ffe">combinations</link> (int n, int k)</para>
</listitem>
            <listitem><para>static long <link linkend="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1a8935665aa2b8419cf58c48e8ba4f05f4">combinationsOptimized</link> (int n, int k)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><formalpara><title>See also</title>

<para><link xlink:href="https://en.wikipedia.org/wiki/Combination">Combination</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1abf95585bc82ee2547c1ba3df3aca3ffe"/><section>
    <title>combinations()</title>
<indexterm><primary>combinations</primary><secondary>com.thealgorithms.maths.Combinations</secondary></indexterm>
<indexterm><primary>com.thealgorithms.maths.Combinations</primary><secondary>combinations</secondary></indexterm>
<para><computeroutput>static long com.thealgorithms.maths.Combinations.combinations (int n, int k)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Calculate combinations</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para>first number </para>
</entry>
                            </row>
                            <row>
<entry>k</entry><entry>
<para>second number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>combinations of given <literallayout><computeroutput>n&#32;
</computeroutput></literallayout> and <literallayout><computeroutput>k&#32;
</computeroutput></literallayout> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1a8935665aa2b8419cf58c48e8ba4f05f4"/><section>
    <title>combinationsOptimized()</title>
<indexterm><primary>combinationsOptimized</primary><secondary>com.thealgorithms.maths.Combinations</secondary></indexterm>
<indexterm><primary>com.thealgorithms.maths.Combinations</primary><secondary>combinationsOptimized</secondary></indexterm>
<para><computeroutput>static long com.thealgorithms.maths.Combinations.combinationsOptimized (int n, int k)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>The above method can exceed limit of long (overflow) when factorial(n) is larger than limits of long variable. Thus even if nCk is within range of long variable above reason can lead to incorrect result. This is an optimized version of computing combinations. Observations: nC(k + 1) = (n<itemizedlist>
<listitem>
<para>k) * nCk / (k + 1) We know the value of nCk when k = 1 which is nCk = n Using this base value and above formula we can compute the next term nC(k+1)</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>k</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>nCk </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1maths_1_1_combinations_1a84652528f03384d6ae54f99c55435187"/><section>
    <title>factorial()</title>
<indexterm><primary>factorial</primary><secondary>com.thealgorithms.maths.Combinations</secondary></indexterm>
<indexterm><primary>com.thealgorithms.maths.Combinations</primary><secondary>factorial</secondary></indexterm>
<para><computeroutput>static long com.thealgorithms.maths.Combinations.factorial (int n)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Calculate of factorial</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>n</entry><entry>
<para>the number </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>factorial of given number </para>
</formalpara>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/main/java/com/thealgorithms/maths/Combinations.java</section>
</section>

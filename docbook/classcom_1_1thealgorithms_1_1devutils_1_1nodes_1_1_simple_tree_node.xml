<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node" xml:lang="en-US">
<title>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt; Class Template Reference</title>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary></indexterm>
<para>Inheritance diagram for com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a5b5950c14941d532bc96523e159c581e">SimpleTreeNode</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a071c5f3458bb937d2e924d220f8e4501">SimpleTreeNode</link> (E data)</para>
</listitem>
            <listitem><para><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a999a120e6313eea35a9e3efb5839fbd5">SimpleTreeNode</link> (E data, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; parentNode)</para>
</listitem>
            <listitem><para><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1aba291cfd51f6a36370d73bcf3e8ba0eb">SimpleTreeNode</link> (E data, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; parentNode, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; leftNode, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; rightNode)</para>
</listitem>
            <listitem><para>boolean <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a45be6d981244b01aedf6a6d5af2c1ba5">isLeafNode</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1ad97ac317eb9f154be6618c355146b2d7"/><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; <emphasis role="strong">getLeftNode</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a8cc46a619ca088b25cdd44e420ca5323"/>void <emphasis role="strong">setLeftNode</emphasis> (<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; leftNode)</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a33bc83430f18ad6411b984fbeb1e3563"/><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; <emphasis role="strong">getRightNode</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a413c49f108d3546171b87d943a16eec5"/>void <emphasis role="strong">setRightNode</emphasis> (<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; rightNode)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Simple <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_tree_node">TreeNode</link> extension that holds references to two child Nodes (left and right).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>&lt;E&gt;</entry><entry>
<para>The type of the data held in the <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_node">Node</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Author</title>

<para><link xlink:href="https://github.com/aitorfi">aitorfi</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a5b5950c14941d532bc96523e159c581e"/><section>
    <title>SimpleTreeNode()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>SimpleTreeNode</primary><secondary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</secondary></indexterm>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary><secondary>SimpleTreeNode</secondary></indexterm>
<para><computeroutput><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">com.thealgorithms.devutils.nodes.SimpleTreeNode</link>&lt; E &gt;.<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link> ( )</computeroutput></para>
<para>Empty contructor. </para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a071c5f3458bb937d2e924d220f8e4501"/><section>
    <title>SimpleTreeNode()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>SimpleTreeNode</primary><secondary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</secondary></indexterm>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary><secondary>SimpleTreeNode</secondary></indexterm>
<para><computeroutput><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">com.thealgorithms.devutils.nodes.SimpleTreeNode</link>&lt; E &gt;.<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link> (E data)</computeroutput></para>
<para>Initializes the Nodes&apos; data.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>Value to which data will be initialized. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>TreeNode::TreeNode(Object) </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a999a120e6313eea35a9e3efb5839fbd5"/><section>
    <title>SimpleTreeNode()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>SimpleTreeNode</primary><secondary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</secondary></indexterm>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary><secondary>SimpleTreeNode</secondary></indexterm>
<para><computeroutput><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">com.thealgorithms.devutils.nodes.SimpleTreeNode</link>&lt; E &gt;.<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link> (E data, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; parentNode)</computeroutput></para>
<para>Initializes the Nodes&apos; data and parent node reference.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>Value to which data will be initialized. </para>
</entry>
                            </row>
                            <row>
<entry>parentNode</entry><entry>
<para>Value to which the nodes&apos; parent reference will be set. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>TreeNode::TreeNode(Object, Node) </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1aba291cfd51f6a36370d73bcf3e8ba0eb"/><section>
    <title>SimpleTreeNode()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>SimpleTreeNode</primary><secondary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</secondary></indexterm>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary><secondary>SimpleTreeNode</secondary></indexterm>
<para><computeroutput><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">com.thealgorithms.devutils.nodes.SimpleTreeNode</link>&lt; E &gt;.<link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link> (E data, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; parentNode, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; leftNode, <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">SimpleTreeNode</link>&lt; E &gt; rightNode)</computeroutput></para>
<para>Initializes the Nodes&apos; data and parent and child nodes references.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>Value to which data will be initialized. </para>
</entry>
                            </row>
                            <row>
<entry>parentNode</entry><entry>
<para>Value to which the nodes&apos; parent reference will be set. </para>
</entry>
                            </row>
                            <row>
<entry>leftNode</entry><entry>
<para>Value to which the nodes&apos; left child reference will be set. </para>
</entry>
                            </row>
                            <row>
<entry>rightNode</entry><entry>
<para>Value to which the nodes&apos; right child reference will be set. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node_1a45be6d981244b01aedf6a6d5af2c1ba5"/><section>
    <title>isLeafNode()</title>
<indexterm><primary>isLeafNode</primary><secondary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</secondary></indexterm>
<indexterm><primary>com.thealgorithms.devutils.nodes.SimpleTreeNode&lt; E &gt;</primary><secondary>isLeafNode</secondary></indexterm>
<para><computeroutput>boolean <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_simple_tree_node">com.thealgorithms.devutils.nodes.SimpleTreeNode</link>&lt; E &gt;.isLeafNode ( )</computeroutput></para>
<para><formalpara><title>Returns</title>

<para>True if the node is a leaf node, otherwise false. </para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_tree_node_1a4e74cbeef32d3428b894c7a6078d507c">TreeNode::isLeafNode()</link> </para>
</formalpara>
</para>
<para>
Reimplemented from <link linkend="_classcom_1_1thealgorithms_1_1devutils_1_1nodes_1_1_tree_node_1a4e74cbeef32d3428b894c7a6078d507c">com.thealgorithms.devutils.nodes.TreeNode&lt; E &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/main/java/com/thealgorithms/devutils/nodes/SimpleTreeNode.java</section>
</section>

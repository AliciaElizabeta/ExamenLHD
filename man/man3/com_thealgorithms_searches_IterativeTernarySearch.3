.TH "com.thealgorithms.searches.IterativeTernarySearch" 3 "Fri Jan 28 2022" "Examen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.thealgorithms.searches.IterativeTernarySearch
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBcom\&.thealgorithms\&.devutils\&.searches\&.SearchAlgorithm\fP\&.
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBmain\fP (String[] args)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A iterative version of a ternary search algorithm This is better way to implement the ternary search, because a recursive version adds some overhead to a stack\&. But in java the compile can transform the recursive version to iterative implicitly, so there are no much differences between these two algorithms
.PP
Worst-case performance Θ(log3(N)) Best-case performance O(1) Average performance Θ(log3(N)) Worst-case space complexity O(1)
.PP
\fBAuthor\fP
.RS 4
Podshivalov Nikita (https://github.com/nikitap492) 
.RE
.PP
\fBSee also\fP
.RS 4
SearchAlgorithm 
.PP
\fBTernarySearch\fP 
.RE
.PP
\fBSince\fP
.RS 4
2018-04-13 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Examen from the source code\&.

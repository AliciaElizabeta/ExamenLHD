.TH "com.thealgorithms.datastructures.heaps.Heap" 3 "Fri Jan 28 2022" "Examen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.thealgorithms.datastructures.heaps.Heap
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MaxHeap\fP, and \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MinHeap\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBHeapElement\fP \fBgetElement\fP ()  throws EmptyHeapException"
.br
.ti -1c
.RI "void \fBinsertElement\fP (\fBHeapElement\fP element)"
.br
.ti -1c
.RI "void \fBdeleteElement\fP (int elementIndex)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface common to heap data structures\&.
.br
.PP
Heaps are tree-like data structures that allow storing elements in a specific way\&. Each node corresponds to an element and has one parent node (except for the root) and at most two children nodes\&. Every element contains a key, and those keys indicate how the tree shall be built\&. For instance, for a min-heap, the key of a node shall be greater than or equal to its parent's and lower than or equal to its children's (the opposite rule applies to a max-heap)\&.
.PP
All heap-related operations (inserting or deleting an element, extracting the min or max) are performed in O(log n) time\&.
.PP
\fBAuthor\fP
.RS 4
Nicolas Renard 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void com\&.thealgorithms\&.datastructures\&.heaps\&.Heap\&.deleteElement (int elementIndex)"
Delete an element in the heap\&.
.PP
\fBParameters\fP
.RS 4
\fIelementIndex\fP int containing the position in the heap of the element to be deleted\&. 
.RE
.PP

.PP
Implemented in \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MaxHeap\fP, and \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MinHeap\fP\&.
.SS "\fBHeapElement\fP com\&.thealgorithms\&.datastructures\&.heaps\&.Heap\&.getElement () throws \fBEmptyHeapException\fP"

.PP
\fBReturns\fP
.RS 4
the top element in the heap, the one with lowest key for min-heap or with the highest key for max-heap 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBEmptyHeapException\fP\fP if heap is empty 
.RE
.PP

.PP
Implemented in \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MaxHeap\fP, and \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MinHeap\fP\&.
.SS "void com\&.thealgorithms\&.datastructures\&.heaps\&.Heap\&.insertElement (\fBHeapElement\fP element)"
Inserts an element in the heap\&. Adds it to then end and toggle it until it finds its right position\&.
.PP
\fBParameters\fP
.RS 4
\fIelement\fP an instance of the \fBHeapElement\fP class\&. 
.RE
.PP

.PP
Implemented in \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MaxHeap\fP, and \fBcom\&.thealgorithms\&.datastructures\&.heaps\&.MinHeap\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Examen from the source code\&.

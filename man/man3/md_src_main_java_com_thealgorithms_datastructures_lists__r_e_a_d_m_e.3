.TH "md_src_main_java_com_thealgorithms_datastructures_lists__r_e_a_d_m_e" 3 "Fri Jan 28 2022" "Examen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_main_java_com_thealgorithms_datastructures_lists__r_e_a_d_m_e \- Linked List 

.SS "Description"
LinkedList is a data structure in which data is stored in a linear manner\&. It usually contains a data field and a link to the memory location of the next mode\&.
.SS "Structure"
.PP
.nf
class LinkedList<E>{
    E value;
    LinkedList next;
}
.fi
.PP
.PP
The \fCnext\fP variable points to the next node in the data structure and value stores the data\&. Any number of nodes can be linked in this manner\&. The structure will be:
.SS "Properties"
.IP "1." 4
Linked list does not provide indexing like an array\&. For accessing a node at position \fCp\fP , (p) nodes need to be accessed\&.
.IP "2." 4
Main advantage of linked list is addition and removal of nodes near the end and beginning of lists\&. It can be done just by updating the link (O(1) time)
.IP "3." 4
Unlike an array, its size is not predefined\&. So any number of nodes can be appended\&.
.PP
.SS "File descriptions:"
.IP "1." 4
\fCCircleLinkedList\&.java\fP : A circular linked list where next pointer of last node points to first nide of linked list\&.
.IP "2." 4
\fCSinglyLinkedList\&.java\fP : The classic case of single links\&.
.IP "3." 4
\fCCountSinglyLinkedListRecursion\&.java\fP: Recursively counts the size of a list\&.
.IP "4." 4
\fCCreateAndDetectLoop\&.java\fP : Create and detect a loop in a linked list\&.
.IP "5." 4
\fCDoublyLinkedList\&.java\fP : A modification of singly linked list which has a \fCprev\fP pointer to point to the previous node\&.
.IP "6." 4
\fCMerge_K_SortedLinkedlist\&.java\fP : Merges K sorted linked list with mergesort (mergesort is also the most efficient sorting algorithm for linked list)\&.
.IP "7." 4
\fCRandomNode\&.java\fP : Selects a random node from given linked list and diplays it\&. 
.PP


.TH "com.thealgorithms.strings" 3 "Fri Jan 28 2022" "Examen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.thealgorithms.strings
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAlphabetical\fP"
.br
.ti -1c
.RI "class \fBAnagrams\fP"
.br
.ti -1c
.RI "class \fBCharactersSame\fP"
.br
.ti -1c
.RI "class \fBCheckAnagrams\fP"
.br
.ti -1c
.RI "class \fBCheckVowels\fP"
.br
.ti -1c
.RI "class \fBHorspoolSearch\fP"
.br
.ti -1c
.RI "class \fBList_all_Possible_Words_From_Phone_Digits\fP"
.br
.ti -1c
.RI "class \fBLongestPalindromicSubstring\fP"
.br
.ti -1c
.RI "class \fBLower\fP"
.br
.ti -1c
.RI "class \fBPalindrome\fP"
.br
.ti -1c
.RI "class \fBPangram\fP"
.br
.ti -1c
.RI "class \fBPermuteString\fP"
.br
.ti -1c
.RI "class \fBReverseString\fP"
.br
.ti -1c
.RI "class \fBRotation\fP"
.br
.ti -1c
.RI "class \fBSolution\fP"
.br
.ti -1c
.RI "class \fBUpper\fP"
.br
.ti -1c
.RI "class \fBWordLadder\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Author : Siddhant Swarup Mallick Github : https://github.com/siddhant2002 PROBLEM DESCRIPTION : An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once\&.[1] For example, the word anagram itself can be rearranged into nag a ram, also the word binary into brainy and the word adobe into abode\&. Reference from https://en.wikipedia.org/wiki/Anagram 
.SH "Author"
.PP 
Generated automatically by Doxygen for Examen from the source code\&.

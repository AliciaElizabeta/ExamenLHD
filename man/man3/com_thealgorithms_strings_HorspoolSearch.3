.TH "com.thealgorithms.strings.HorspoolSearch" 3 "Fri Jan 28 2022" "Examen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.thealgorithms.strings.HorspoolSearch
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static int \fBfindFirst\fP (String pattern, String text)"
.br
.ti -1c
.RI "static int \fBfindFirstInsensitive\fP (String pattern, String text)"
.br
.ti -1c
.RI "static Integer \fBgetLastComparisons\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is not thread safe
.br
 
.br
 (From wikipedia) In computer science, the Boyer–Moore–Horspool algorithm or Horspool's algorithm is an algorithm for finding substrings in strings\&. It was published by Nigel Horspool in 1980\&. 
.br
 \fCWikipedia page\fP
.br
 
.br
.PP
An explanation:
.br
.PP
The Horspool algorithm is a simplification of the Boyer-Moore algorithm in that it uses only one of the two heuristic methods for increasing the number of characters shifted when finding a bad match in the text\&. This method is usually called the 'bad symbol' or 'bad character' shift\&. The bad symbol shift method is classified as an input enhancement method in the theory of algorithms\&. Input enhancement is (from wikipedia) the principle that processing a given input to a problem and altering it in a specific way will increase runtime efficiency or space efficiency, or both\&. Both algorithms try to match the pattern and text comparing the pattern symbols to the text's from right to left\&.
.br
 
.br
.PP
In the bad symbol shift method, a table is created prior to the search, called the 'bad symbol table'\&. The bad symbol table contains the shift values for any symbol in the text and pattern\&. For these symbols, the value is the length of the pattern, if the symbol is not in the first (length - 1) of the pattern\&. Else it is the distance from its rightmost occurrence in the pattern to the last symbol of the pattern\&. In practice, we only calculate the values for the ones that exist in the first (length - 1) of the pattern\&.
.br
 
.br
.PP
For more details on the algorithm and the more advanced Boyer-Moore I recommend checking out the wikipedia page and professor Anany Levitin's book: Introduction To The Design And Analysis Of Algorithms\&. 
.SH "Member Function Documentation"
.PP 
.SS "static int com\&.thealgorithms\&.strings\&.HorspoolSearch\&.findFirst (String pattern, String text)\fC [static]\fP"
Case sensitive version version of the algorithm
.PP
\fBParameters\fP
.RS 4
\fIpattern\fP the pattern to be searched for (needle) 
.br
\fItext\fP the text being searched in (haystack) 
.RE
.PP
\fBReturns\fP
.RS 4
-1 if not found or first index of the pattern in the text 
.RE
.PP

.SS "static int com\&.thealgorithms\&.strings\&.HorspoolSearch\&.findFirstInsensitive (String pattern, String text)\fC [static]\fP"
Case insensitive version version of the algorithm
.PP
\fBParameters\fP
.RS 4
\fIpattern\fP the pattern to be searched for (needle) 
.br
\fItext\fP the text being searched in (haystack) 
.RE
.PP
\fBReturns\fP
.RS 4
-1 if not found or first index of the pattern in the text 
.RE
.PP

.SS "static Integer com\&.thealgorithms\&.strings\&.HorspoolSearch\&.getLastComparisons ()\fC [static]\fP"
Utility method that returns comparisons made by last run (mainly for tests)
.PP
\fBReturns\fP
.RS 4
number of character comparisons of the last search 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Examen from the source code\&.
